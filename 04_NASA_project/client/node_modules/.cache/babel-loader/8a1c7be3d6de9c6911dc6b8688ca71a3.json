{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useCallback, useEffect, useState } from 'react';\nimport { httpGetLaunches, httpSubmitLaunch, httpAbortLaunch } from './requests';\n\nfunction useLaunches(onSuccessSound, onAbortSound, onFailureSound) {\n  _s();\n\n  const [launches, saveLaunches] = useState([]);\n  const [isPendingLaunch, setPendingLaunch] = useState(false);\n  const getLaunches = useCallback(async () => {\n    const fetchedLaunches = await httpGetLaunches();\n    saveLaunches(fetchedLaunches);\n  }, []);\n  useEffect(() => {\n    getLaunches();\n  }, [getLaunches]);\n  const submitLaunch = useCallback(async e => {\n    e.preventDefault();\n    setPendingLaunch(true);\n    const data = new FormData(e.target);\n    const launchDate = new Date(data.get('launch-day'));\n    const mission = data.get('mission-name');\n    const rocket = data.get('rocket-name');\n    const target = data.get('planets-selector');\n    const response = await httpSubmitLaunch({\n      launchDate,\n      mission,\n      rocket,\n      target\n    }); // TODO: Set success based on response.\n\n    const success = false;\n\n    if (success) {\n      getLaunches();\n      setTimeout(() => {\n        setPendingLaunch(false);\n        onSuccessSound();\n      }, 800);\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onSuccessSound, onFailureSound]);\n  const abortLaunch = useCallback(async id => {\n    const response = await httpAbortLaunch(id); // TODO: Set success based on response.\n\n    const success = false;\n\n    if (success) {\n      getLaunches();\n      onAbortSound();\n    } else {\n      onFailureSound();\n    }\n  }, [getLaunches, onAbortSound, onFailureSound]);\n  return {\n    launches,\n    isPendingLaunch,\n    submitLaunch,\n    abortLaunch\n  };\n}\n\n_s(useLaunches, \"8KpHIIq7AzMRt3raNpddjI+KYXY=\");\n\nexport default useLaunches;","map":{"version":3,"names":["useCallback","useEffect","useState","httpGetLaunches","httpSubmitLaunch","httpAbortLaunch","useLaunches","onSuccessSound","onAbortSound","onFailureSound","launches","saveLaunches","isPendingLaunch","setPendingLaunch","getLaunches","fetchedLaunches","submitLaunch","e","preventDefault","data","FormData","target","launchDate","Date","get","mission","rocket","response","success","setTimeout","abortLaunch","id"],"sources":["/Users/memphisdiangelis/Desktop/Udemy/CompleteNodeJSDev2002/04_NASA_project/client/src/hooks/useLaunches.js"],"sourcesContent":["import { useCallback, useEffect, useState } from 'react';\n\nimport { httpGetLaunches, httpSubmitLaunch, httpAbortLaunch } from './requests';\n\nfunction useLaunches(onSuccessSound, onAbortSound, onFailureSound) {\n\tconst [launches, saveLaunches] = useState([]);\n\tconst [isPendingLaunch, setPendingLaunch] = useState(false);\n\n\tconst getLaunches = useCallback(async () => {\n\t\tconst fetchedLaunches = await httpGetLaunches();\n\t\tsaveLaunches(fetchedLaunches);\n\t}, []);\n\n\tuseEffect(() => {\n\t\tgetLaunches();\n\t}, [getLaunches]);\n\n\tconst submitLaunch = useCallback(\n\t\tasync (e) => {\n\t\t\te.preventDefault();\n\t\t\tsetPendingLaunch(true);\n\t\t\tconst data = new FormData(e.target);\n\t\t\tconst launchDate = new Date(data.get('launch-day'));\n\t\t\tconst mission = data.get('mission-name');\n\t\t\tconst rocket = data.get('rocket-name');\n\t\t\tconst target = data.get('planets-selector');\n\t\t\tconst response = await httpSubmitLaunch({\n\t\t\t\tlaunchDate,\n\t\t\t\tmission,\n\t\t\t\trocket,\n\t\t\t\ttarget,\n\t\t\t});\n\n\t\t\t// TODO: Set success based on response.\n\t\t\tconst success = false;\n\t\t\tif (success) {\n\t\t\t\tgetLaunches();\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tsetPendingLaunch(false);\n\t\t\t\t\tonSuccessSound();\n\t\t\t\t}, 800);\n\t\t\t} else {\n\t\t\t\tonFailureSound();\n\t\t\t}\n\t\t},\n\t\t[getLaunches, onSuccessSound, onFailureSound]\n\t);\n\n\tconst abortLaunch = useCallback(\n\t\tasync (id) => {\n\t\t\tconst response = await httpAbortLaunch(id);\n\n\t\t\t// TODO: Set success based on response.\n\t\t\tconst success = false;\n\t\t\tif (success) {\n\t\t\t\tgetLaunches();\n\t\t\t\tonAbortSound();\n\t\t\t} else {\n\t\t\t\tonFailureSound();\n\t\t\t}\n\t\t},\n\t\t[getLaunches, onAbortSound, onFailureSound]\n\t);\n\n\treturn {\n\t\tlaunches,\n\t\tisPendingLaunch,\n\t\tsubmitLaunch,\n\t\tabortLaunch,\n\t};\n}\n\nexport default useLaunches;\n"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,SAAtB,EAAiCC,QAAjC,QAAiD,OAAjD;AAEA,SAASC,eAAT,EAA0BC,gBAA1B,EAA4CC,eAA5C,QAAmE,YAAnE;;AAEA,SAASC,WAAT,CAAqBC,cAArB,EAAqCC,YAArC,EAAmDC,cAAnD,EAAmE;EAAA;;EAClE,MAAM,CAACC,QAAD,EAAWC,YAAX,IAA2BT,QAAQ,CAAC,EAAD,CAAzC;EACA,MAAM,CAACU,eAAD,EAAkBC,gBAAlB,IAAsCX,QAAQ,CAAC,KAAD,CAApD;EAEA,MAAMY,WAAW,GAAGd,WAAW,CAAC,YAAY;IAC3C,MAAMe,eAAe,GAAG,MAAMZ,eAAe,EAA7C;IACAQ,YAAY,CAACI,eAAD,CAAZ;EACA,CAH8B,EAG5B,EAH4B,CAA/B;EAKAd,SAAS,CAAC,MAAM;IACfa,WAAW;EACX,CAFQ,EAEN,CAACA,WAAD,CAFM,CAAT;EAIA,MAAME,YAAY,GAAGhB,WAAW,CAC/B,MAAOiB,CAAP,IAAa;IACZA,CAAC,CAACC,cAAF;IACAL,gBAAgB,CAAC,IAAD,CAAhB;IACA,MAAMM,IAAI,GAAG,IAAIC,QAAJ,CAAaH,CAAC,CAACI,MAAf,CAAb;IACA,MAAMC,UAAU,GAAG,IAAIC,IAAJ,CAASJ,IAAI,CAACK,GAAL,CAAS,YAAT,CAAT,CAAnB;IACA,MAAMC,OAAO,GAAGN,IAAI,CAACK,GAAL,CAAS,cAAT,CAAhB;IACA,MAAME,MAAM,GAAGP,IAAI,CAACK,GAAL,CAAS,aAAT,CAAf;IACA,MAAMH,MAAM,GAAGF,IAAI,CAACK,GAAL,CAAS,kBAAT,CAAf;IACA,MAAMG,QAAQ,GAAG,MAAMvB,gBAAgB,CAAC;MACvCkB,UADuC;MAEvCG,OAFuC;MAGvCC,MAHuC;MAIvCL;IAJuC,CAAD,CAAvC,CARY,CAeZ;;IACA,MAAMO,OAAO,GAAG,KAAhB;;IACA,IAAIA,OAAJ,EAAa;MACZd,WAAW;MACXe,UAAU,CAAC,MAAM;QAChBhB,gBAAgB,CAAC,KAAD,CAAhB;QACAN,cAAc;MACd,CAHS,EAGP,GAHO,CAAV;IAIA,CAND,MAMO;MACNE,cAAc;IACd;EACD,CA3B8B,EA4B/B,CAACK,WAAD,EAAcP,cAAd,EAA8BE,cAA9B,CA5B+B,CAAhC;EA+BA,MAAMqB,WAAW,GAAG9B,WAAW,CAC9B,MAAO+B,EAAP,IAAc;IACb,MAAMJ,QAAQ,GAAG,MAAMtB,eAAe,CAAC0B,EAAD,CAAtC,CADa,CAGb;;IACA,MAAMH,OAAO,GAAG,KAAhB;;IACA,IAAIA,OAAJ,EAAa;MACZd,WAAW;MACXN,YAAY;IACZ,CAHD,MAGO;MACNC,cAAc;IACd;EACD,CAZ6B,EAa9B,CAACK,WAAD,EAAcN,YAAd,EAA4BC,cAA5B,CAb8B,CAA/B;EAgBA,OAAO;IACNC,QADM;IAENE,eAFM;IAGNI,YAHM;IAINc;EAJM,CAAP;AAMA;;GAlEQxB,W;;AAoET,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}