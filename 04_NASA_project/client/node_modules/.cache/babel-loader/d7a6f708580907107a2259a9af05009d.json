{"ast":null,"code":"import _asyncToGenerator from\"/Users/memphisdiangelis/Desktop/Udemy/CompleteNodeJSDev2002/04_NASA_project/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/Users/memphisdiangelis/Desktop/Udemy/CompleteNodeJSDev2002/04_NASA_project/client/node_modules/@babel/runtime/regenerator/index.js\";var API_URL='http://localhost:8000';// Load planets and return as JSON.\nfunction httpGetPlanets(){return _httpGetPlanets.apply(this,arguments);}// Load launches, sort by flight number, and return as JSON.\nfunction _httpGetPlanets(){_httpGetPlanets=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return fetch(\"\".concat(API_URL,\"/planets\"));case 2:response=_context.sent;_context.next=5;return response.json();case 5:return _context.abrupt(\"return\",_context.sent);case 6:case\"end\":return _context.stop();}}},_callee);}));return _httpGetPlanets.apply(this,arguments);}function httpGetLaunches(){return _httpGetLaunches.apply(this,arguments);}// Submit given launch data to launch system.\nfunction _httpGetLaunches(){_httpGetLaunches=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var response,fetchedLaunches;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch(\"\".concat(API_URL,\"/launches\"));case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:fetchedLaunches=_context2.sent;return _context2.abrupt(\"return\",fetchedLaunches.sort(function(a,b){return a.flightNumber-b.flightNumber;}));case 7:case\"end\":return _context2.stop();}}},_callee2);}));return _httpGetLaunches.apply(this,arguments);}function httpSubmitLaunch(_x){return _httpSubmitLaunch.apply(this,arguments);}// Delete launch with given ID.\nfunction _httpSubmitLaunch(){_httpSubmitLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(launch){return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;_context3.next=3;return fetch(\"\".concat(API_URL,\"/launches\"),{method:'post',headers:{'Content-Type':'application/json'},body:JSON.stringify(launch)});case 3:return _context3.abrupt(\"return\",_context3.sent);case 6:_context3.prev=6;_context3.t0=_context3[\"catch\"](0);return _context3.abrupt(\"return\",{ok:false});case 9:case\"end\":return _context3.stop();}}},_callee3,null,[[0,6]]);}));return _httpSubmitLaunch.apply(this,arguments);}function httpAbortLaunch(_x2){return _httpAbortLaunch.apply(this,arguments);}function _httpAbortLaunch(){_httpAbortLaunch=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(id){return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return fetch(\"\".concat(API_URL,\"/launches/\").concat(id),{method:'delete'});case 3:return _context4.abrupt(\"return\",_context4.sent);case 6:_context4.prev=6;_context4.t0=_context4[\"catch\"](0);console.log(_context4.t0);return _context4.abrupt(\"return\",{ok:false});case 10:case\"end\":return _context4.stop();}}},_callee4,null,[[0,6]]);}));return _httpAbortLaunch.apply(this,arguments);}export{httpGetPlanets,httpGetLaunches,httpSubmitLaunch,httpAbortLaunch};","map":{"version":3,"names":["API_URL","httpGetPlanets","fetch","response","json","httpGetLaunches","fetchedLaunches","sort","a","b","flightNumber","httpSubmitLaunch","launch","method","headers","body","JSON","stringify","ok","httpAbortLaunch","id","console","log"],"sources":["/Users/memphisdiangelis/Desktop/Udemy/CompleteNodeJSDev2002/04_NASA_project/client/src/hooks/requests.js"],"sourcesContent":["const API_URL = 'http://localhost:8000';\n\n// Load planets and return as JSON.\nasync function httpGetPlanets() {\n\tconst response = await fetch(`${API_URL}/planets`);\n\treturn await response.json();\n}\n\n// Load launches, sort by flight number, and return as JSON.\nasync function httpGetLaunches() {\n\tconst response = await fetch(`${API_URL}/launches`);\n\tconst fetchedLaunches = await response.json();\n\treturn fetchedLaunches.sort((a, b) => {\n\t\treturn a.flightNumber - b.flightNumber;\n\t});\n}\n\n// Submit given launch data to launch system.\nasync function httpSubmitLaunch(launch) {\n\ttry {\n\t\treturn await fetch(`${API_URL}/launches`, {\n\t\t\tmethod: 'post',\n\t\t\theaders: {\n\t\t\t\t'Content-Type': 'application/json',\n\t\t\t},\n\t\t\tbody: JSON.stringify(launch),\n\t\t});\n\t} catch (error) {\n\t\treturn {\n\t\t\tok: false,\n\t\t};\n\t}\n}\n\n// Delete launch with given ID.\nasync function httpAbortLaunch(id) {\n\ttry {\n\t\treturn await fetch(`${API_URL}/launches/${id}`, {\n\t\t\tmethod: 'delete',\n\t\t});\n\t} catch (error) {\n\t\tconsole.log(error);\n\t\treturn {\n\t\t\tok: false,\n\t\t};\n\t}\n}\n\nexport { httpGetPlanets, httpGetLaunches, httpSubmitLaunch, httpAbortLaunch };\n"],"mappings":"mVAAA,GAAMA,CAAAA,OAAO,CAAG,uBAAhB,CAEA;QACeC,CAAAA,c,iDAKf;mGALA,sKACwBC,CAAAA,KAAK,WAAIF,OAAJ,aAD7B,QACOG,QADP,qCAEcA,CAAAA,QAAQ,CAACC,IAAT,EAFd,6G,yDAMeC,CAAAA,e,kDAQf;qGARA,4LACwBH,CAAAA,KAAK,WAAIF,OAAJ,cAD7B,QACOG,QADP,uCAE+BA,CAAAA,QAAQ,CAACC,IAAT,EAF/B,QAEOE,eAFP,iDAGQA,eAAe,CAACC,IAAhB,CAAqB,SAACC,CAAD,CAAIC,CAAJ,CAAU,CACrC,MAAOD,CAAAA,CAAC,CAACE,YAAF,CAAiBD,CAAC,CAACC,YAA1B,CACA,CAFM,CAHR,0D,0DASeC,CAAAA,gB,qDAgBf;uGAhBA,kBAAgCC,MAAhC,8JAEeV,CAAAA,KAAK,WAAIF,OAAJ,cAAwB,CACzCa,MAAM,CAAE,MADiC,CAEzCC,OAAO,CAAE,CACR,eAAgB,kBADR,CAFgC,CAKzCC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeL,MAAf,CALmC,CAAxB,CAFpB,qJAUS,CACNM,EAAE,CAAE,KADE,CAVT,uE,2DAiBeC,CAAAA,e,0JAAf,kBAA+BC,EAA/B,8JAEelB,CAAAA,KAAK,WAAIF,OAAJ,sBAAwBoB,EAAxB,EAA8B,CAC/CP,MAAM,CAAE,QADuC,CAA9B,CAFpB,oHAMEQ,OAAO,CAACC,GAAR,eANF,iCAOS,CACNJ,EAAE,CAAE,KADE,CAPT,wE,kDAaA,OAASjB,cAAT,CAAyBI,eAAzB,CAA0CM,gBAA1C,CAA4DQ,eAA5D"},"metadata":{},"sourceType":"module"}